local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Humanoid.RootPart or Character:FindFirstChild("HumanoidRootPart")

if game.GameId ~= 2820580801 then
    Fluent:Notify({
        Title = "Error",
        Content = "This script can only run in Ohio. GameId is ".. game.GameId,
        Duration = 8
    })
    return
elseif not Humanoid or not RootPart then
    Fluent:Notify({
        Title = "Error",
        Content = "Your character is missing essential parts.",
        Duration = 8
    })
    return
end

local Window = Fluent:CreateWindow({
    Title = "Ohio Powers",
    SubTitle = "by veddetsiwt [v6]",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "box" }),
    Powers = Window:AddTab({ Title = "Powers", Icon = "flame" }),
    Buy = Window:AddTab({ Title = "Buy", Icon = "shopping-cart" }),
    Autofarm = Window:AddTab({ Title = "Autofarm", Icon = "rocket" }),
    Itemfarm = Window:AddTab({ Title = "Itemfarm", Icon = "gem" }),
}

local Options = Fluent.Options
local AutofarmActive = false
local ItemfarmActive = false

do
    ----------------------------------------------------------------------------------------- Autofarm

    local AutofarmToggle = Tabs.Autofarm:AddToggle("AutofarmToggle", {Title = "Autofarm Active", Default = false })
    AutofarmToggle:OnChanged(function(Value)
        AutofarmActive = Value
        Fluent:Notify({
            Title = "Autofarm",
            Content = Value and "Enabled Autofarm" or "Disabled Autofarm",
            Duration = 5
        })
    end)

  ----------------------------------------------------------------------------------------- Itemfarm

local ItemPickup = game.Workspace:FindFirstChild("Game") and game.Workspace.Game:FindFirstChild("Entities") and game.Workspace.Game.Entities:FindFirstChild("ItemPickup")
local ToggledItems = {}
local ItemfarmConnection

if ItemPickup then
    local function SearchForItems()
        if not ItemfarmActive or not next(ToggledItems) then return end

        for _, item in ipairs(ItemPickup:GetChildren()) do
            local itemName = item:GetAttribute("itemName")
            if itemName and ToggledItems[itemName] then
                local prompt = item:FindFirstChildWhichIsA("ProximityPrompt")
                if prompt then
                    fireproximityprompt(prompt)
                end
            end
        end
    end    

    local ItemfarmToggle = Tabs.Itemfarm:AddToggle("ItemfarmToggle", {Title = "Itemfarm Active", Default = false })

    local ItemfarmDropdown = Tabs.Itemfarm:AddDropdown("ItemfarmDropdown", {
        Title = "Select Items",
        Description = "Items to farm (you can select multiple).",
        Values = {"Money Printer", "Gold Bar", "Component Box"},
        Multi = true,
        Default = {"Money Printer"},
    })

    ItemfarmDropdown:OnChanged(function(SelectedItems)
        ToggledItems = {}
        for _, item in ipairs(SelectedItems) do
            ToggledItems[item] = true
        end
    end)

    ItemfarmToggle:OnChanged(function(Value)
        ItemfarmActive = Value 

        if Value then
            SearchForItems()

            if not ItemfarmConnection then
                ItemfarmConnection = ItemPickup.ChildAdded:Connect(SearchForItems)
            end
        else
            if ItemfarmConnection then
                ItemfarmConnection:Disconnect()
                ItemfarmConnection = nil
            end
        end

        Fluent:Notify({
            Title = "Itemfarm",
            Content = Value and "Enabled Itemfarm" or "Disabled Itemfarm",
            Duration = 5
        })
    end)
end

    ----------------------------------------------------------------------------------------- Buy

    local ItemsOnSale = game.Workspace:FindFirstChild("ItemsOnSale")
    local SelectedGun

    if ItemsOnSale then
        local QuickBuyGunsDropDown = Tabs.Buy:AddDropdown("QuickBuyGunsDropDown", {
            Title = "Select Gun",
            Values = {"AK-47", "AR-15", "AUG", "Acid Gun", "Barrett M107", "Deagle", "Double Barrel", "Dragunov", "Glock", "Glock 18", "M1911", "M249 SAW", "M4A1", "MP7", "Minigun", 
            "Mossberg", "P90", "Python", "RPG", "RPK", "Raygun", "Saiga 12", "Sawn Off", "Scar L", "Stagecoach", "Tommy Gun", "USP 45", "Uzi"},
            Multi = false,
            Default = 1,
        })

        QuickBuyGunsDropDown:OnChanged(function(Value)
            local Gun = ItemsOnSale:FindFirstChild(Value)
            if Gun and Gun:FindFirstChild("Button") and Gun.Button:FindFirstChild("ClickDetector") then
                SelectedGun = Gun
            else
                Fluent:Notify({
                    Title = "Error",
                    Content = "Gun not found or missing ClickDetector.",
                    Duration = 8
                })
            end
        end)

        PurchaseButton = Tabs.Buy:AddButton({
            Title = "Purchase",
            Description = "Purchase the item selected in the dropdown.",
            Callback = function()
                if SelectedGun and SelectedGun:FindFirstChild("Button") and SelectedGun.Button:FindFirstChild("ClickDetector") then
                    SelectedGun:PivotTo(RootPart.CFrame * CFrame.new(0, 0, -2))
                    fireclickdetector(SelectedGun.Button.ClickDetector)
                else
                    Fluent:Notify({
                        Title = "Error",
                        Content = "No valid gun selected for purchase.",
                        Duration = 8
                    })
                end
            end
        })              
    else
        Fluent:Notify({
            Title = "Error",
            Content = "'ItemsOnSale' folder not found in Workspace.",
            Duration = 8
        })
    end
end

